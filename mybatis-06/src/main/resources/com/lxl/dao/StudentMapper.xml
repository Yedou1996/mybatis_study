<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lxl.dao.StudentMapper">
    <!--方式一，按照结果嵌套处理-->
    <resultMap id="studentTeacher2" type="student">
        <result property="id" column="s_id"></result>
        <result property="name" column="s_name"></result>
        <association property="teacher" javaType="teacher">
            <result property="name" column="t_name"></result>
            <result property="id" column="t_id"></result>
        </association>
    </resultMap>
    <select id="getStudent2" resultMap="studentTeacher2">
        select s.id s_id,s.name s_name,t.name t_name , t.id t_id from student s LEFT JOIN  teacher t on  s.tid=t.id
    </select>


<!--方式二，按照查询嵌套处理-->
    <!--
     思路：
         1、查询所有的学生信息
         2、根据查询出来的学生的id的tid，寻找对应的老师！ -子查询

     -->
    <resultMap id="studentTeacher" type="student">
        <result property="id" column="id"></result>
        <result property="name" column="name"></result>

        <!--复杂的属性，我们需要单独处理  对象：association  集合：collection-->

        <association property="teacher" column="tid" javaType="teacher" select="getTeacherById"></association>
    </resultMap>
    <select id="getStudent" resultMap="studentTeacher">
        select * from mybatis.student
    </select>
    <select id="getTeacherById" resultType="teacher">
        select * from mybatis.teacher where id=#{id}
    </select>
</mapper>